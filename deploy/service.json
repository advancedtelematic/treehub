[{
  "id": "${DEPLOY_ENV}/${JOB_NAME}",
  "uris": ["/root/docker.tar.gz"],
  "constraints": [["rack_id", "CLUSTER", "$MARATHON_CONSTRAINTS"]],
  "cpus": 0.6,
  "mem": 2048,
  "instances": 1,
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "${IMAGE_ARTIFACT}",
      "parameters": [{"key": "log-driver", "value": "syslog"},
                     {"key": "log-opt", "value": "tag=${SERVICE_NAME}"}],
      "forcePullImage": true,
      "network": "BRIDGE",
      "portMappings": [{
        "containerPort": 9001,
        "hostPort": 0,
        "protocol": "tcp"
      }]
    }
  },
  "env": {
    "AUTH_PROTOCOL": "none",
    "BIND_HOST": "0.0.0.0",
    "BIND_PORT": "9001",
    "DB_MIGRATE": "true",
    "DB_PASSWORD": "${DB_PASSWORD}",
    "DB_URL": "${DB_URL}",
    "DB_USER": "${DB_USER}",
    "DELTAS_AWS_BUCKET_ID": "${DELTAS_AWS_BUCKET_ID}",
    "DEVICE_REGISTRY_HOST": "${DEVICE_REGISTRY_HOST}",
    "DEVICE_REGISTRY_PORT": "${DEVICE_REGISTRY_PORT}",
    "INFLUXDB_HOST": "${INFLUXDB_HOST}",
    "INFLUXDB_PORT": "${INFLUXDB_PORT}",
    "JAVA_OPTS": "${JAVA_OPTS}",
    "JWT_SECRET": "${JWT_SECRET}",
    "KAFKA_HOST": "${KAFKA_HOST}",
    "KAFKA_TOPIC_SUFFIX": "${KAFKA_TOPIC_SUFFIX}",
    "MESSAGING_MODE": "kafka",
    "SERVICE_HEALTH_CHECK": "curl --show-error --silent %<host>s:%<port>s/health",
    "SERVICE_IMAGE": "${IMAGE_ARTIFACT}",
    "SERVICE_NAME": "${SERVICE_NAME}",
    "SERVICE_SCOPE": "internal",
    "SERVICE_TYPE": "http",
    "TREEHUB_AWS_ACCESS_KEY": "${TREEHUB_AWS_ACCESS_KEY}",
    "TREEHUB_AWS_BUCKET_ID": "${TREEHUB_AWS_BUCKET_ID}",
    "TREEHUB_AWS_REGION": "${TREEHUB_AWS_REGION}",
    "TREEHUB_AWS_SECRET_KEY": "${TREEHUB_AWS_SECRET_KEY}",
    "TREEHUB_HOSTNAME": "${TREEHUB_HOSTNAME}",
    "TREEHUB_STORAGE": "${TREEHUB_STORAGE}"
  },
  "healthChecks": [{
    "protocol": "HTTP",
    "path": "/health",
    "intervalSeconds": 30
  }],
  "backoffSeconds": 1,
  "backoffFactor": 1.15,
  "maxLaunchDelaySeconds": 3600,
  "taskKillGracePeriodSeconds": 2
},
{
  "id": "${DEPLOY_ENV}/${JOB_NAME}-pub",
  "uris": ["/root/docker.tar.gz"],
  "constraints": [["rack_id", "CLUSTER", "$MARATHON_CONSTRAINTS"]],
  "cpus": 0.6,
  "mem": 1048,
  "instances": 1,
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "${IMAGE_ARTIFACT}",
      "parameters": [{"key": "log-driver", "value": "syslog"},
                     {"key": "log-opt", "value": "tag=${SERVICE_NAME_PUB}"}],
      "forcePullImage": true,
      "network": "BRIDGE",
      "portMappings": [{
        "containerPort": 9001,
        "hostPort": 0,
        "protocol": "tcp"
      }]
    }
  },
  "env": {
    "AUTHPLUS_CLIENT_ID": "${AUTHPLUS_CLIENT_ID}",
    "AUTHPLUS_CLIENT_SECRET": "${AUTHPLUS_CLIENT_SECRET}",
    "AUTH_PLUS_HOST": "${AUTH_PLUS_HOST}",
    "AUTH_PLUS_PORT": "${AUTH_PLUS_PORT}",
    "AUTH_PLUS_SCHEME": "https",
    "AUTH_PROTOCOL": "oauth.accesstoken",
    "AUTH_VERIFICATION": "auth-plus",
    "BIND_HOST": "0.0.0.0",
    "BIND_PORT": "9001",
    "DB_MIGRATE": "true",
    "DB_PASSWORD": "${DB_PASSWORD}",
    "DB_URL": "${DB_URL}",
    "DB_USER": "${DB_USER}",
    "DELTAS_AWS_BUCKET_ID": "${DELTAS_AWS_BUCKET_ID}",
    "DEVICE_REGISTRY_HOST": "${DEVICE_REGISTRY_HOST}",
    "DEVICE_REGISTRY_PORT": "${DEVICE_REGISTRY_PORT}",
    "INFLUXDB_HOST": "${INFLUXDB_HOST}",
    "INFLUXDB_PORT": "${INFLUXDB_PORT}",
    "JAVA_OPTS": "${JAVA_OPTS}",
    "JWT_SECRET": "${JWT_SECRET}",
    "KAFKA_HOST": "${KAFKA_HOST}",
    "KAFKA_TOPIC_SUFFIX": "${KAFKA_TOPIC_SUFFIX}",
    "MESSAGING_MODE": "kafka",
    "SERVICE_HEALTH_CHECK": "curl --show-error --silent %<host>s:%<port>s/health",
    "SERVICE_IMAGE": "${IMAGE_ARTIFACT}",
    "SERVICE_NAME": "${SERVICE_NAME_PUB}",
    "SERVICE_SCOPE": "public",
    "SERVICE_TYPE": "http",
    "TREEHUB_AWS_ACCESS_KEY": "${TREEHUB_AWS_ACCESS_KEY}",
    "TREEHUB_AWS_BUCKET_ID": "${TREEHUB_AWS_BUCKET_ID}",
    "TREEHUB_AWS_REGION": "${TREEHUB_AWS_REGION}",
    "TREEHUB_AWS_SECRET_KEY": "${TREEHUB_AWS_SECRET_KEY}",
    "TREEHUB_HOSTNAME": "${TREEHUB_HOSTNAME}",
    "TREEHUB_STORAGE": "${TREEHUB_STORAGE}"
  },
  "healthChecks": [{
    "protocol": "HTTP",
    "path": "/health",
    "intervalSeconds": 30
  }],
  "backoffSeconds": 1,
  "backoffFactor": 1.15,
  "maxLaunchDelaySeconds": 3600,
  "taskKillGracePeriodSeconds": 2
}]

